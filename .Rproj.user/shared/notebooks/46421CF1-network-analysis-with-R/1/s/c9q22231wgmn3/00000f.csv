"0","oddsratio_function <-  function(egoalter_tab, attribute) {"
"0","  "
"0","  # Arguments: "
"0","  # egoalter_tab: table of interest"
"0","  # attribute: vector representing attribute of interest in the sample "
"0","  "
"0","  # We first calculate the number of dyads that match and mismatch on the"
"0","  # attribute based on the observed data. "
"0","  "
"0","  # We calculate the number matching by summing up over the diagonal of the "
"0","  # the table (as these are cases where ego and alter have the same value)."
"0","  "
"0","  match <- sum(diag(egoalter_tab)) "
"0","  "
"0","  # We now calculate the number mismatching by taking the total number of "
"0","  # dyads and subtracting the number that match (calculated above)."
"0",""
"0","  notmatch <- sum(egoalter_tab) - match"
"0","  "
"0","  # Now we calculate our chance expectations, defined as what would happen"
"0","  # if we randomly paired all respondents from the data (defined in the "
"0","  # input attribute vector), and calculated how many of those "
"0","  # pairs were the same (and different) on the attribute of interest."
"0","  "
"0","  # We first do a table on the attribute, to see how many people fall "
"0","  # into each category."
"0","  "
"0","  freq <- table(attribute) "
"0","  "
"0","  # We next calculate the total number of random pairings, "
"0","  # assuming we pair all respondents with all respondents. "
"0","  # This is simply the number of respondents times the number of "
"0","  # respondents minus 1, as we assume we are not pairing "
"0","  # people with themself."
"0","  "
"0","  total_dyads <- sum(freq) * (sum(freq) - 1)"
"0",""
"0","  # We now calculate the number of random pairings expected to "
"0","  # match by chance."
"0","  # Formally, we take the number in each category (e.g., number of men) and"
"0","  # multiply that number by itself (minus 1 as we again "
"0","  # assume people are not paired with themself), showing"
"0","  # how many pairs would be the same if we paired all respondents with all "
"0","  # respondents. Remember that R will multiply things element-wise, "
"0","  # so the following bit of code will take the first value in freq"
"0","  # and multiply it by the first element in freq-1. We sum up the values "
"0","  # to get the total number of dyads that are expected to match."
"0","  "
"0","  match_chance <- sum(freq * (freq - 1))"
"0","  "
"0","  # We now calculate the number of dyads not matching by chance as the "
"0","  # difference between the total number of dyads and "
"0","  # those matching by chance."
"0",""
"0","  notmatch_chance <-  total_dyads - match_chance "
"0","  "
"0","  # And finally we can calculate the odds ratio of "
"0","  # observed odds of matching to odds of matching by chance"
"0",""
"0","  or <- (match * notmatch_chance) / (notmatch * match_chance) "
"0",""
"0","  return(or)"
"0","} "
